/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package py.edu.facitec.mec.view.mov;

import java.awt.event.KeyEvent;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import py.edu.facitec.mec.controller.ClienteController;
import py.edu.facitec.mec.controller.ClienteControllerImpl;
import py.edu.facitec.mec.controller.MantenimientoController;
import py.edu.facitec.mec.controller.MantenimientoControllerImp;
import py.edu.facitec.mec.controller.MantenimientoDetController;
import py.edu.facitec.mec.controller.MantenimientoDetControllerImp;
import py.edu.facitec.mec.controller.ServiciosController;
import py.edu.facitec.mec.controller.ServiciosControllerImp;
import py.edu.facitec.mec.model.Cliente;
import py.edu.facitec.mec.model.Mantenimiento;
import py.edu.facitec.mec.model.MantenimientoDetalle;
import py.edu.facitec.mec.model.Servicio;
import py.edu.facitec.mec.util.Utilidad;
import static py.edu.facitec.mec.view.mov.FormMovimiento.servCodigo;

/**
 *
 * @author Jorge Fabio
 */
public class FormMovimiento extends javax.swing.JFrame {

    /**
     * Creates new form FormMovimiento
     */
    
    ServiciosController serController;
    ClienteController clieController;
    MantenimientoController cabecera;
    MantenimientoDetController detalle;
    
    static DefaultTableModel modelo;
    Calendar dia = new GregorianCalendar();

    public FormMovimiento() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        
        modelo = (DefaultTableModel) jTable1.getModel();
        
        serController = new ServiciosControllerImp();
        clieController = new ClienteControllerImpl();
        cabecera = new MantenimientoControllerImp();
        detalle = new MantenimientoDetControllerImp();
        
        tfMovNro.requestFocus();
        
        fecha.setCalendar(dia);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tfMovNro = new javax.swing.JTextField();
        tfCodClie = new javax.swing.JTextField();
        tfNombClie = new javax.swing.JTextField();
        servCodigo = new javax.swing.JTextField();
        servDescripcion = new javax.swing.JTextField();
        servCantidad = new javax.swing.JTextField();
        servUnitario = new javax.swing.JTextField();
        tfImpoTotal = new javax.swing.JTextField();
        panelButton1 = new javax.swing.JPanel();
        btnAceptar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        panelButton2 = new javax.swing.JPanel();
        btnGrabar = new javax.swing.JButton();
        btnAnular = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnBuscarClie = new javax.swing.JButton();
        btnBuscarSer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        cmbCondicion = new javax.swing.JComboBox<>();
        fecha = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Movimientos");
        setSize(new java.awt.Dimension(800, 600));

        jLabel1.setText("Nro de Movimiento:");

        jLabel2.setText("Condicion:");

        jLabel3.setText("Fecha:");

        jLabel4.setText("Cliente:");

        jLabel5.setText("Detalles de Movimiento");

        jLabel6.setText("Registrar Servicios:");

        jLabel7.setText("Codigo:");

        jLabel8.setText("Descripci√≥n:");

        jLabel9.setText("Cantidad");

        jLabel10.setText("Precio Unitario:");

        jLabel11.setText("Monto total:");

        jLabel12.setText("Observacion:");

        tfMovNro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfMovNroFocusLost(evt);
            }
        });
        tfMovNro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfMovNroKeyPressed(evt);
            }
        });

        tfCodClie.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfCodClieFocusLost(evt);
            }
        });
        tfCodClie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfCodClieKeyPressed(evt);
            }
        });

        tfNombClie.setEditable(false);
        tfNombClie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfNombClieKeyPressed(evt);
            }
        });

        servCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                servCodigoFocusLost(evt);
            }
        });
        servCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                servCodigoKeyPressed(evt);
            }
        });

        servDescripcion.setEditable(false);
        servDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                servDescripcionKeyPressed(evt);
            }
        });

        servCantidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                servCantidadFocusLost(evt);
            }
        });
        servCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                servCantidadKeyPressed(evt);
            }
        });

        servUnitario.setEditable(false);
        servUnitario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                servUnitarioKeyPressed(evt);
            }
        });

        tfImpoTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfImpoTotalKeyPressed(evt);
            }
        });

        panelButton1.setLayout(new java.awt.GridLayout(1, 0));

        btnAceptar.setText("Insertar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        btnAceptar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAceptarKeyPressed(evt);
            }
        });
        panelButton1.add(btnAceptar);

        btnBorrar.setText("Eliminar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        btnBorrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBorrarKeyPressed(evt);
            }
        });
        panelButton1.add(btnBorrar);

        panelButton2.setLayout(new java.awt.GridLayout(1, 0));

        btnGrabar.setText("Guardar");
        btnGrabar.setEnabled(false);
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });
        btnGrabar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnGrabarKeyPressed(evt);
            }
        });
        panelButton2.add(btnGrabar);

        btnAnular.setText("Anular");
        btnAnular.setEnabled(false);
        btnAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnularActionPerformed(evt);
            }
        });
        btnAnular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAnularKeyPressed(evt);
            }
        });
        panelButton2.add(btnAnular);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        btnCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCancelarKeyPressed(evt);
            }
        });
        panelButton2.add(btnCancelar);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        btnSalir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalirKeyPressed(evt);
            }
        });
        panelButton2.add(btnSalir);

        btnBuscarClie.setText("Buscar");
        btnBuscarClie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClieActionPerformed(evt);
            }
        });
        btnBuscarClie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBuscarClieKeyPressed(evt);
            }
        });

        btnBuscarSer.setText("Buscar");
        btnBuscarSer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarSerActionPerformed(evt);
            }
        });
        btnBuscarSer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBuscarSerKeyPressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion Servicio", "Cantidad", "P. Unitario", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jScrollPane2.setViewportView(jTextPane1);

        cmbCondicion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Contado", "Credito" }));
        cmbCondicion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbCondicionKeyPressed(evt);
            }
        });

        fecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fechaKeyPressed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 0, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(panelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(117, 117, 117)
                                .addComponent(panelButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfImpoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnBuscarClie)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfCodClie, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(tfNombClie, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(10, 10, 10)
                                        .addComponent(tfMovNro, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel2)
                                        .addGap(10, 10, 10)
                                        .addComponent(cmbCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnBuscarSer)
                                                .addGap(18, 18, 18)
                                                .addComponent(servCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel7)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(servDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(servCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(servUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addComponent(jLabel12))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfMovNro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfCodClie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarClie)
                    .addComponent(tfNombClie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel9)))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarSer)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(servDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(servCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(servUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(servCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(panelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(tfImpoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarClieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClieActionPerformed
        obtenerCliente();
    }//GEN-LAST:event_btnBuscarClieActionPerformed

    private void btnBuscarSerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarSerActionPerformed
        
        if(servCodigo.getText().isEmpty()){
            FormServiciosConsulta cons = new FormServiciosConsulta(this, rootPaneCheckingEnabled);
            cons.setVisible(true);
        }else{
            Servicio servicio = serController.recuperarPorCodigo(Integer.parseInt(servCodigo.getText()));
            if (servicio!=null) {
                obtenerServicios();
                servCantidad.requestFocus();
            }else{
                JOptionPane.showMessageDialog(this, "No existe este servicio", "Aviso", 1);
                servCodigo.requestFocus();
                servCodigo.setText("");
            }
        }
        
    }//GEN-LAST:event_btnBuscarSerActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        if(servCodigo.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Debe ingresar el codigo de un servicio", "Aviso", 1);
            btnBuscarSer.requestFocus();
        }else{
            cargarTabla(); sumarColumnasTabla(); limpiarCamposServicioDetalle();            
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        eliminarFila();
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        if (validarCampos()) {
            guardarMantenimiento();
            guardarDetalle();
            estadoInsercion();
            limpiar();            
        }
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btnAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnularActionPerformed
        int opcion = JOptionPane.showConfirmDialog(this, "Esta seguro que desea anular este movimiento?\n Este proceso es irreversible", "Aviso", 2);
        if (opcion == JOptionPane.YES_OPTION) {
            cabecera.anular(Integer.parseInt(tfMovNro.getText()));
        jLabel13.setText("Este movimiento esta anulado, no se puede revertir.");
        btnAnular.setEnabled(false);
        btnSalir.requestFocus();
           
        }else{
            
            btnSalir.requestFocus();
        }
    }//GEN-LAST:event_btnAnularActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void tfMovNroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMovNroKeyPressed
        moverConEnter(evt, cmbCondicion);
    }//GEN-LAST:event_tfMovNroKeyPressed

    private void cmbCondicionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbCondicionKeyPressed
        moverConEnter(evt, tfCodClie);
    }//GEN-LAST:event_cmbCondicionKeyPressed

    private void fechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fechaKeyPressed
        moverConEnter(evt, tfCodClie);
    }//GEN-LAST:event_fechaKeyPressed

    private void btnBuscarClieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuscarClieKeyPressed
        hacerClicConEnter(evt, btnBuscarClie);
    }//GEN-LAST:event_btnBuscarClieKeyPressed

    private void tfCodClieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCodClieKeyPressed
        moverConEnter(evt, servCodigo);
    }//GEN-LAST:event_tfCodClieKeyPressed

    private void tfNombClieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNombClieKeyPressed
        moverConEnter(evt, servCodigo);
    }//GEN-LAST:event_tfNombClieKeyPressed

    private void btnBuscarSerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuscarSerKeyPressed
        hacerClicConEnter(evt, btnBuscarSer);
        moverConEnter(evt, servCodigo);
    }//GEN-LAST:event_btnBuscarSerKeyPressed

    private void servCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_servCodigoKeyPressed
        moverConEnter(evt, servCantidad);
    }//GEN-LAST:event_servCodigoKeyPressed

    private void servDescripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_servDescripcionKeyPressed
        moverConEnter(evt, servCantidad);
    }//GEN-LAST:event_servDescripcionKeyPressed

    private void servCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_servCantidadKeyPressed
        moverConEnter(evt, btnAceptar);
    }//GEN-LAST:event_servCantidadKeyPressed

    private void servUnitarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_servUnitarioKeyPressed
        moverConEnter(evt, btnAceptar);
    }//GEN-LAST:event_servUnitarioKeyPressed

    private void tfImpoTotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfImpoTotalKeyPressed
        moverConEnter(evt, btnAceptar);
    }//GEN-LAST:event_tfImpoTotalKeyPressed

    private void btnAceptarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAceptarKeyPressed
        hacerClicConEnter(evt, btnAceptar);
        moverConEnter(evt, servCodigo);
    }//GEN-LAST:event_btnAceptarKeyPressed

    private void btnBorrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBorrarKeyPressed
        hacerClicConEnter(evt, btnBorrar);
    }//GEN-LAST:event_btnBorrarKeyPressed

    private void btnGrabarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnGrabarKeyPressed
        hacerClicConEnter(evt, btnGrabar);
    }//GEN-LAST:event_btnGrabarKeyPressed

    private void btnAnularKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAnularKeyPressed
        hacerClicConEnter(evt, btnAnular);
    }//GEN-LAST:event_btnAnularKeyPressed

    private void btnCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCancelarKeyPressed
        hacerClicConEnter(evt, btnCancelar);
    }//GEN-LAST:event_btnCancelarKeyPressed

    private void btnSalirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalirKeyPressed
        hacerClicConEnter(evt, btnSalir);
    }//GEN-LAST:event_btnSalirKeyPressed

    private void tfMovNroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfMovNroFocusLost
        if(tfMovNro.getText().isEmpty()){
            tfMovNro.setText(cabecera.obtenerMaximo()+"");
            estadoInsercion();
        }else{
            obtenerMovimiento();
        }
    }//GEN-LAST:event_tfMovNroFocusLost

    private void tfCodClieFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfCodClieFocusLost
        if (tfCodClie.getText().isEmpty()) {
            
        }else{
            btnBuscarClie.doClick();
        }
    }//GEN-LAST:event_tfCodClieFocusLost

    private void servCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_servCodigoFocusLost
        if (servCodigo.getText().isEmpty()) {
            
        }else{
            btnBuscarSer.doClick();
        }
    }//GEN-LAST:event_servCodigoFocusLost

    private void servCantidadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_servCantidadFocusLost
        if (servCantidad.getText().isEmpty()) {
            servCantidad.setText("1");
        }else{
            btnAceptar.requestFocus();
        }
    }//GEN-LAST:event_servCantidadFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormMovimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormMovimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormMovimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormMovimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormMovimiento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAnular;
    private javax.swing.JButton btnBorrar;
    public static javax.swing.JButton btnBuscarClie;
    public static javax.swing.JButton btnBuscarSer;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cmbCondicion;
    private com.toedter.calendar.JDateChooser fecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JPanel panelButton1;
    private javax.swing.JPanel panelButton2;
    private javax.swing.JTextField servCantidad;
    public static javax.swing.JTextField servCodigo;
    private javax.swing.JTextField servDescripcion;
    private javax.swing.JTextField servUnitario;
    public static javax.swing.JTextField tfCodClie;
    private javax.swing.JTextField tfImpoTotal;
    private javax.swing.JTextField tfMovNro;
    private javax.swing.JTextField tfNombClie;
    // End of variables declaration//GEN-END:variables

    private void moverConEnter(java.awt.event.KeyEvent evt, JComponent source) {
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            source.requestFocus();
        }
    }
    
    private void hacerClicConEnter(java.awt.event.KeyEvent evt, JButton buttom){
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            buttom.doClick();
        }
    }
    
    private void estadoInsercion(){
        btnAceptar.setEnabled(true);
        btnAnular.setEnabled(false);
        btnBorrar.setEnabled(true);
        btnBuscarClie.setEnabled(true);
        btnBuscarSer.setEnabled(true);
        btnGrabar.setEnabled(true);
        btnSalir.setEnabled(true);
        cmbCondicion.setEditable(true);
        fecha.setEnabled(true);
        jTable1.setEnabled(true);
        jTextPane1.setEditable(true);
        servCantidad.setEditable(true);
        servCodigo.setEditable(true);
        servDescripcion.setEditable(false);
        servUnitario.setEditable(false);
        tfCodClie.setEditable(true);
        tfImpoTotal.setEditable(false);
        tfMovNro.setEnabled(true);
        tfMovNro.setEditable(true);
        tfNombClie.setEditable(false);
        jLabel13.setText("");
    }
    
    private void estadoConsulta(){
        btnAceptar.setEnabled(false);
        btnAnular.setEnabled(true);
        btnBorrar.setEnabled(false);
        btnBuscarClie.setEnabled(false);
        btnBuscarSer.setEnabled(false);
        btnGrabar.setEnabled(false);
        btnSalir.setEnabled(true);
        cmbCondicion.setEditable(false);
        fecha.setEnabled(false);
        jTable1.setEnabled(false);
        jTextPane1.setEditable(false);
        servCantidad.setEditable(false);
        servCodigo.setEditable(false);
        servDescripcion.setEditable(false);
        servUnitario.setEditable(false);
        tfCodClie.setEditable(false);
        tfImpoTotal.setEditable(false);
        tfMovNro.setEditable(false);
        tfNombClie.setEditable(false);
    }
    
    private void obtenerCliente(){
        if(tfCodClie.getText().isEmpty()){
            FormClienteConsulta consulta = new FormClienteConsulta(this, rootPaneCheckingEnabled);
            consulta.setVisible(true);
        }else{
            Cliente clie = clieController.recuperarPorCodigo(Integer.parseInt(tfCodClie.getText()));
            if (clie!=null) {
                tfNombClie.setText(clie.getNombres()+" "+clie.getApellidos());
                servCodigo.requestFocus();
            }else{
                JOptionPane.showMessageDialog(this, "No existe este cliente", "Aviso", 1);
                tfCodClie.requestFocus();
                tfCodClie.setText("");
            }
        }
    }
    
    private void obtenerServicios() {
        Servicio ser = serController.recuperarPorCodigo(Integer.parseInt(servCodigo.getText()));
        if(ser!=null){
            servDescripcion.setText(ser.getDescripcion());
            servUnitario.setText(Utilidad.formatoValorS(ser.getValor_unitario()));
        }else{
            JOptionPane.showMessageDialog(this, "No existe este serivcio", "Aviso", 1);
            servCodigo.setText("");
            servCodigo.requestFocus();
        }
    }

    private void obtenerMovimiento() {

        Mantenimiento mant = cabecera.recuperarPorCodigo(Integer.parseInt(tfMovNro.getText()));
    
        if (mant!=null) {//Esta parte del codigo recupera la cabecera del movmiento
            fecha.setDate(mant.getFecha());
            cmbCondicion.setSelectedItem(mant.getCondicion());
            tfCodClie.setText(mant.getCliente_codigo()+"");
            jTextPane1.setText(mant.getObservacion());
            tfCodClie.requestFocus();
            servCodigo.requestFocus();
            
            String [] nombreColumnas = {"Codigo", "Nombre", "Cantidad", "P. Unitario", "Subtotal"};
            
            List<MantenimientoDetalle> mantDet = detalle.recuperarPorFiltro(Integer.parseInt(tfMovNro.getText()));
            
            Object[][] datos = new Object[mantDet.size()][nombreColumnas.length];
            
            for (int i=0; i< mantDet.size(); i++){
                
                Servicio ser = serController.recuperarPorCodigo(mantDet.get(i).getServ_codigo());
                datos[i][0]=mantDet.get(i).getServ_codigo();
                datos[i][1]=ser.getNombre();
                datos[i][2]=Utilidad.formatoValorS(mantDet.get(i).getCantidad());
                datos[i][3]=Utilidad.formatoValorS(mantDet.get(i).getPrecio());
                Double can, uni, subtot;
                can = (mantDet.get(i).getCantidad());
                uni = (mantDet.get(i).getPrecio());
                subtot = can*uni;
                datos[i][4]=Utilidad.formatoValorS(subtot);
            }
            modelo = new DefaultTableModel(datos, nombreColumnas);
            this.jTable1.setModel(modelo);
            sumarColumnasTabla();
            estadoConsulta();
            fecha.requestFocus();
            tfMovNro.setEnabled(false);
            if("Anulado".equals(mant.getSituacion())){
                jLabel13.setText("Este movimiento esta anulado, no se puede revertir.");
                btnAnular.setEnabled(false);
            }//Esta parte del codigo recupera el detalle del movimiento y lo carga en la tabla
            
        }else{
            JOptionPane.showMessageDialog(this, "No existe movimiento");
            tfMovNro.setText("");
            tfMovNro.requestFocus();
        }
    }

    private void limpiarCamposServicioDetalle() { // Limpia los campos donde se cargan los servicios
        servCodigo.requestFocus();
        servCodigo.setText("");
        servDescripcion.setText("");
        servCantidad.setText("");
        servUnitario.setText("");
    }

    private void limpiar() {
        tfMovNro.requestFocus();
        tfMovNro.setEnabled(true);
        tfMovNro.setEditable(true);
        tfMovNro.setText("");
        cmbCondicion.setSelectedIndex(0);
        tfCodClie.setText("");
        tfNombClie.setText("");
        tfImpoTotal.setText("");
        servCodigo.setText("");
        servDescripcion.setText("");
        servCantidad.setText("");
        servUnitario.setText("");
        fecha.setCalendar(dia);
        btnGrabar.setEnabled(false);
        btnAnular.setEnabled(false);
        jLabel13.setText("");
        
        //ciclo para limpiar la tabla
        for (int i = 0; i < jTable1.getRowCount(); i++) {
           modelo.removeRow(i);
           i-=1;
       }
    }

    private void guardarDetalle() {
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            MantenimientoDetalle det = new MantenimientoDetalle();
            det.setMant_codigo(Integer.parseInt(tfMovNro.getText()));
            det.setServ_codigo(Integer.parseInt(jTable1.getValueAt(i, 0).toString()));
            det.setCantidad(Utilidad.formatoValorD(jTable1.getValueAt(i, 2).toString()));
            det.setPrecio(Utilidad.formatoValorD(jTable1.getValueAt(i, 3).toString()));
            det.setSubtotal(Utilidad.formatoValorD(jTable1.getValueAt(i, 4).toString()));
            detalle.registrar(det);            
        }
    }

    private void guardarMantenimiento() {
        Mantenimiento mant = new Mantenimiento(
                fecha.getDate(), 
                Integer.parseInt(tfCodClie.getText()), 
                cmbCondicion.getSelectedItem().toString(), 
                Utilidad.formatoValorD(tfImpoTotal.getText()), 
                jTextPane1.getText(), 
                "Activo");
        cabecera.registrar(mant);
    }

    private void sumarColumnasTabla() {
        
        double sumatoria1=0.0;

        int totalRow= jTable1.getRowCount();

        totalRow-=1;

        for(int i=0;i<=(totalRow);i++){
            
            double sumatoria= Utilidad.formatoValorD(String.valueOf(jTable1.getValueAt(i,4)));
        //en la parte de arriba indica el primer parametro la fila y el segundo la columna 
        //la cual estaras manejando

            sumatoria1+=sumatoria;
            
            tfImpoTotal.setText(Utilidad.formatoValorS(sumatoria1));
        }
    }


    private void eliminarFila() {
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int a = jTable1.getSelectedRow();
        if (a<0){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila de la tabla" );
        }else {
            int confirmar=JOptionPane.showConfirmDialog(null, "Esta seguro que desea Eliminar el registro? ");
            if(JOptionPane.OK_OPTION==confirmar) {
                model.removeRow(a);
            }
        }
    }

    private void cargarTabla() {
        
        Object [] fila=new Object[5];

        fila[0]=servCodigo.getText();
        fila[1]=servDescripcion.getText();
        fila[2]=servCantidad.getText();
        fila[3]=servUnitario.getText();
        Double can, uni, subtot;
        can = Double.parseDouble(servCantidad.getText());
        uni = Utilidad.formatoValorD(servUnitario.getText());
        subtot = can*uni;
        fila[4]=Utilidad.formatoValorS(subtot);
        
        modelo.addRow(fila);

        jTable1.setModel(modelo);
    }

    boolean validarCampos(){
        boolean validar = false;
        if (tfMovNro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No se puede grabar un movimiento sin numero");
            tfMovNro.requestFocus();
        }else if (tfCodClie.getText().isEmpty()&&tfNombClie.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No se puede grabar un movimiento sin un cliente");
            tfCodClie.requestFocus();
        }else if(tfImpoTotal.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "No se puede grabar un movimiento sin Servicio");
            servCodigo.requestFocus();
        }else{
            validar = true;
        }
        return validar;
    }
}
