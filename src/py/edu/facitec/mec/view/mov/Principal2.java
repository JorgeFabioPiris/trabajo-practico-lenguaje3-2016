/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package py.edu.facitec.mec.view.mov;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import py.edu.facitec.mec.controller.CiudadController;
import py.edu.facitec.mec.controller.CiudadControllerImp;
import py.edu.facitec.mec.controller.ClienteController;
import py.edu.facitec.mec.controller.ClienteControllerImpl;
import py.edu.facitec.mec.controller.ServiciosController;
import py.edu.facitec.mec.controller.ServiciosControllerImp;
import py.edu.facitec.mec.model.Ciudad;
import py.edu.facitec.mec.model.Cliente;
import py.edu.facitec.mec.model.Servicio;

/**
 *
 * @author Jorge Fabio
 */
public class Principal2 extends javax.swing.JFrame {

    /**
     * Creates new form Principal2
     */
    CiudadController ciuController;
    ClienteController clieController;
    ServiciosController serController;
    
    public Principal2() {
        initComponents();
        
        ciuController = new CiudadControllerImp();
        clieController = new ClienteControllerImpl();
        serController = new ServiciosControllerImp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jrCiudad = new javax.swing.JRadioButton();
        jrCliente = new javax.swing.JRadioButton();
        jrServicio = new javax.swing.JRadioButton();
        tfBusqueda = new javax.swing.JTextField();
        btnConsultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        bntCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ABM General");
        setBackground(new java.awt.Color(153, 51, 255));

        buttonGroup1.add(jrCiudad);
        jrCiudad.setText("Ciudad");

        buttonGroup1.add(jrCliente);
        jrCliente.setText("Ciente");

        buttonGroup1.add(jrServicio);
        jrServicio.setText("Servicio");
        jrServicio.setToolTipText("");

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jButton1.setText("Nuevo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar);

        bntCancelar.setText("Cancelar");
        bntCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(bntCancelar);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jrCiudad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jrCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jrServicio)
                        .addGap(18, 18, 18)
                        .addComponent(tfBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConsultar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrCiudad)
                            .addComponent(jrCliente)
                            .addComponent(jrServicio)
                            .addComponent(btnConsultar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(tfBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        if (jrCiudad.isSelected()) {
            consultarCiudad();
        }else if (jrCliente.isSelected()) {
            consultarCliente();
        }else if (jrServicio.isSelected()) {
            consultarServicio();
        }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar una opción", "Aviso", 1);
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (jrCiudad.isSelected()) {
            guardarCiudad();
        }else if (jrCliente.isSelected()) {
            guardarCliente();
        }else if (jrServicio.isSelected()) {
            guardarServicio();
        }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar una opción", "Aviso", 1);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void bntCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntCancelarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bntCancelarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jrCiudad.isSelected()) {
            insertarNuevaCiudad();
            jLabel1.setText("Atencion: esta a punto de insertar una Nueva Ciudad");
        }else if (jrCliente.isSelected()) {
            insertarNuevoCliente();
            jLabel1.setText("Atencion: esta a punto de insertar un Nuevo Cliente");
        }else if (jrServicio.isSelected()) {
            insertarNuevoServicio();
            jLabel1.setText("Atencion: esta a punto de insertar un Nuevo Servicio");
            
        }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar una opción", "Aviso", 1);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntCancelar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSalir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton jrCiudad;
    private javax.swing.JRadioButton jrCliente;
    private javax.swing.JRadioButton jrServicio;
    private javax.swing.JTextField tfBusqueda;
    // End of variables declaration//GEN-END:variables

    private void consultarCiudad() {
        
        String [] nombreColumnas = {"Codigo", "Nombre", "Iso"};// en este vector se pone los nombres de las colomnas
        
        List<Ciudad> listaCiudad = ciuController.recuperarPorFiltro(tfBusqueda.getText());// aca carga el resultado del dao
        
        Object[][] datos = new Object[listaCiudad.size()][nombreColumnas.length];
        
        for (int i = 0; i < listaCiudad.size(); i++) {
            
            datos[i][0] = listaCiudad.get(i).getCodigo();
            datos[i][1] = listaCiudad.get(i).getNombre();
            datos[i][2] = listaCiudad.get(i).getIso();
            
        }
        
        DefaultTableModel modelo = new DefaultTableModel(datos, nombreColumnas);
        
        this.jTable1.setModel(modelo);
        
    }

    private void consultarCliente() {
        
        String [] nombreColumnas = {"Codigo", "Nombre", "Apellido", "Direccion", "CodigoCiudad", "Celular", "Credito", "Estado"};
        
        List<Cliente> listaCliente = clieController.recuperarPorFiltro(tfBusqueda.getText());

        Object[][] datos = new Object[listaCliente.size()][nombreColumnas.length];

        for (int i=0; i< listaCliente.size(); i++){
            
            datos[i][0] = listaCliente.get(i).getCodigo();
            datos[i][1] = listaCliente.get(i).getNombres();
            datos[i][2] = listaCliente.get(i).getApellidos();
            datos[i][3] = listaCliente.get(i).getDireccion();
            datos[i][4] = listaCliente.get(i).getCiudad_codigo();
            datos[i][5] = listaCliente.get(i).getCelular();
            datos[i][6] = listaCliente.get(i).getCredito();
            datos[i][7] = listaCliente.get(i).isEstado();
            
        }
        
        DefaultTableModel modelo = new DefaultTableModel(datos, nombreColumnas);
        
        this.jTable1.setModel(modelo);
    }

    private void consultarServicio() {
        
        String [] nombreColumnas = {"Codigo", "Nombre", "Descripcion", "Precio Unitario", "Estado"};// en este vector se pone los nombres de las colomnas
        
        List<Servicio> listaServicio = serController.recuperarPorFiltro(tfBusqueda.getText());// aca carga el resultado del dao
        
        Object[][] datos = new Object[listaServicio.size()][nombreColumnas.length];
        
        for (int i = 0; i < listaServicio.size(); i++) {
            
            datos[i][0] = listaServicio.get(i).getCodigo();
            datos[i][1] = listaServicio.get(i).getNombre();
            datos[i][2] = listaServicio.get(i).getDescripcion();
            
        }
        
        DefaultTableModel modelo = new DefaultTableModel(datos, nombreColumnas);
        
        this.jTable1.setModel(modelo);
        
    }

    private void insertarNuevaCiudad() {
        
        String [] nombreColumnas = {"Codigo", "Nombre", "Iso"};// en este vector se pone los nombres de las colomnas
        
        Ciudad ciudad = new Ciudad();
        
        Object[][] datos = new Object[1][nombreColumnas.length];
        
        for (int i = 0; i < 1; i++) {
            
            datos[i][0] = ciudad.getCodigo();
            datos[i][1] = ciudad.getNombre();
            datos[i][2] = ciudad.getIso();
            
        }
        
        DefaultTableModel modelo = new DefaultTableModel(datos, nombreColumnas);
        
        this.jTable1.setModel(modelo);
    }

    private void insertarNuevoCliente() {
        
        String [] nombreColumnas = {"Codigo", "Nombre", "Apellido", "Direccion", "CodigoCiudad", "Celular", "Credito", "Estado"};
        
        Cliente cliente = new Cliente();
        
        Object[][] datos = new Object[1][nombreColumnas.length];
        
        for (int i = 0; i < 1; i++) {
            
            datos[i][0] = cliente.getCodigo();
            datos[i][1] = cliente.getNombres();
            datos[i][2] = cliente.getApellidos();
            datos[i][3] = cliente.getDireccion();
            datos[i][4] = cliente.getCiudad_codigo();
            datos[i][5] = cliente.getCelular();
            datos[i][6] = cliente.getCredito();
            datos[i][7] = cliente.isEstado();
            
        }
        
        DefaultTableModel modelo = new DefaultTableModel(datos, nombreColumnas);
        
        this.jTable1.setModel(modelo);
    }

    private void insertarNuevoServicio() {
        
        String [] nombreColumnas = {"Codigo", "Nombre", "Descripcion", "Precio Unitario", "estado"};
        
        Servicio serivicio = new Servicio();
        
        Object[][] datos = new Object[1][nombreColumnas.length];
        
        for (int i = 0; i < 1; i++) {
            
            datos[i][0] = serivicio.getCodigo();
            datos[i][1] = serivicio.getNombre();
            datos[i][2] = serivicio.getDescripcion();
            datos[i][3] = serivicio.getValor_unitario();
            datos[i][4] = serivicio.isEstado();            
        }
        
        DefaultTableModel modelo = new DefaultTableModel(datos, nombreColumnas);
        
        this.jTable1.setModel(modelo);
    }

    private void guardarCiudad() {
        Ciudad ciudad = new Ciudad();
            ciudad.setNombre(jTable1.getValueAt(0, 1).toString());
            ciudad.setIso(jTable1.getValueAt(0, 2).toString());
            ciudad.setEstado(true);
            ciuController.registrar(ciudad);
    }

    private void guardarCliente() {
        Cliente cliente = new Cliente();
            cliente.setNombres(jTable1.getValueAt(0, 1).toString());
            cliente.setApellidos(jTable1.getValueAt(0, 2).toString());
            cliente.setDireccion(jTable1.getValueAt(0, 3).toString());            
            String valor = jTable1.getValueAt(0, 4).toString();            
            cliente.setCiudad_codigo(Integer.parseInt(valor));            
            cliente.setCelular(jTable1.getValueAt(0, 5).toString());            
            cliente.setCredito((Double)jTable1.getValueAt(0, 6));            
            cliente.setEstado(true);
            clieController.registrar(cliente);
    }

    private void guardarServicio() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
